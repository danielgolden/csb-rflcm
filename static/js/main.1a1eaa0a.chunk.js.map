{"version":3,"sources":["App.js","index.js"],"names":["App","useState","report","setReport","sampleText","setSampleText","useEffect","unified","use","retextEnglish","retextRepeatedWords","retextIndefiniteArticle","retextReadability","retextSentenceSpacing","retextPassive","retextContractions","retextStringify","process","then","text","JSON","parse","reporterJson","messages","retext","retextSpell","dictionary","file","console","error","reporter","className","value","onChange","e","target","length","map","issue","index","reason","renderReport","rootElement","document","getElementById","ReactDOM","render"],"mappings":"yTAkBe,SAASA,IACtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,gGAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAIAC,qBAAU,WACRC,cACGC,IAAIC,KACJD,IAAIE,KACJF,IAAIG,KACJH,IAAII,KACJJ,IAAIK,KACJL,IAAIM,KACJN,IAAIO,KACJP,IAAIQ,KACJC,QAAQb,GACRc,MAAK,SAACC,GACLhB,EAAUiB,KAAKC,MAAMC,YAAaH,IAAO,GAAGI,aAIhDC,cACGhB,IAAIiB,IAAaC,KACjBT,QAAQ,0BACRC,MAAK,SAACS,GACLC,QAAQC,MAAMC,YAASH,SAE1B,CAACvB,IAcJ,OACE,sBAAK2B,UAAU,MAAf,UACE,6CACA,0BACEC,MAAO5B,EACP6B,SAAU,SAACC,GAhBf7B,EAgB4C6B,EAhBxBC,OAAOH,UAkBzB,6CAfiB,WACnB,GAAI9B,EAAOkC,OAAS,EAClB,OAAOlC,EAAOmC,KAAI,SAACC,EAAOC,GACxB,OAAO,4BAAgBD,EAAME,QAAdD,MAahBE,MC/DP,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC9C,EAAD,MAEF0C,K","file":"static/js/main.1a1eaa0a.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport { reporterJson } from \"vfile-reporter-json\";\nimport { unified } from \"unified\";\nimport { retext } from \"retext\";\nimport retextEnglish from \"retext-english\";\nimport retextIndefiniteArticle from \"retext-indefinite-article\";\nimport retextRepeatedWords from \"retext-repeated-words\";\nimport retextStringify from \"retext-stringify\";\nimport retextReadability from \"retext-readability\";\nimport retextSentenceSpacing from \"retext-sentence-spacing\";\nimport retextPassive from \"retext-passive\";\nimport retextContractions from \"retext-contractions\";\nimport retextSpell from \"retext-spell\";\nimport dictionary from \"dictionary-en\";\n\nimport { reporter } from \"vfile-reporter\";\n\nexport default function App() {\n  const [report, setReport] = useState([]);\n  const [sampleText, setSampleText] = useState(\n    `So a dog was was seen yesterday.  Actually, I might be wrong. I am not sure. Im also unsure `\n  );\n\n  useEffect(() => {\n    unified()\n      .use(retextEnglish)\n      .use(retextRepeatedWords)\n      .use(retextIndefiniteArticle)\n      .use(retextReadability)\n      .use(retextSentenceSpacing)\n      .use(retextPassive)\n      .use(retextContractions)\n      .use(retextStringify)\n      .process(sampleText)\n      .then((text) => {\n        setReport(JSON.parse(reporterJson(text))[0].messages);\n        // console.log(JSON.parse(reporterJson(text))[0].messages);\n      });\n\n    retext()\n      .use(retextSpell, dictionary)\n      .process(\"Some useles documeant.\")\n      .then((file) => {\n        console.error(reporter(file));\n      });\n  }, [sampleText]);\n\n  const handleTextAreaOnChange = (event) => {\n    setSampleText(event.target.value);\n  };\n\n  const renderReport = () => {\n    if (report.length > 0) {\n      return report.map((issue, index) => {\n        return <p key={index}>{issue.reason}</p>;\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Retext demo</h1>\n      <textarea\n        value={sampleText}\n        onChange={(e) => handleTextAreaOnChange(e)}\n      />\n      <h2>Suggestions</h2>\n      {renderReport()}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}